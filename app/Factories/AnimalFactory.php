<?php

namespace App\Factories;

use App\Models\Animals\Animal;
use App\Models\Animals\Cow;
use App\Models\Animals\Chicken;
use App\Models\Products\Product;

class AnimalFactory
{
    // array for registration of new types of animals
    // and bind a products to them
    // [animal class => product name]
    protected array $animalMap = [
        Cow::class => 'Milk',
        Chicken::class => 'Eggs',
    ];

    /**
     * @param string $animalType animal class name
     * @param string $id generated by some logic
     * @return Animal object
     */
    public function create(string $animalType, string $id): Animal
    {
        if (!isset($this->animalMap[$animalType])) {
            throw new \InvalidArgumentException("Unknown animal type: $animalType");
        }

        $product = new Product($this->animalMap[$animalType]);

        return new $animalType($id, $product);
    }

    /**
     * Allow dynamic registration of new animal types
     * for example:
     * $this->registerAnimal(Goat::class, 'Goat Milk');
     * Also the Goat class must be created
     * @param string $animalType
     * @param string $productName
     */
    public function registerAnimal(string $animalType, string $productName): void
    {
        $this->animalMap[$animalType] = $productName;
    }
}
